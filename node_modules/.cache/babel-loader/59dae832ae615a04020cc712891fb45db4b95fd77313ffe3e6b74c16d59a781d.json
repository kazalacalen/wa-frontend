{"ast":null,"code":"import axios from \"axios\";\nimport $router from \"@/router\";\n\n//vezan uz konkretni backend\nlet Service = axios.create({\n  /* baseURL: \"http://localhost:3100/\", */\n  baseURL: \"https://backendmatej2.herokuapp.com/\",\n  timeout: 3000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n/* PRIJE SVAKOG */\n\nService.interceptors.request.use(request => {\n  try {\n    request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\n  } catch (e) {\n    console.error(e);\n  }\n  return request;\n});\nService.interceptors.response.use(response => response, error => {\n  if (error.response.status == 401 || error.response.status == 401) {\n    Auth.logout();\n    //$router.go()\n  }\n});\nlet Proizvodi = {\n  async getAll(proizvodi) {\n    let response = await Service.get(`/Proizvod?${proizvodi}`);\n    let data = response.data;\n    data = data.map(doc => {\n      return {\n        imgURL: doc.imageurl,\n        id: doc._id,\n        Proizvod: doc.Proizvod,\n        ProizvodModel: doc.ProizvodModel,\n        Cijena: doc.Cijena,\n        Opis: doc.Opis,\n        NajboljaUporaba: doc.NajboljaUporaba\n      };\n    });\n    return data;\n  }\n};\n\n/* KORISNICI */\n\nlet Auth = {\n  async login(username, password) {\n    try {\n      let response = await Service.post(\"/auth\", {\n        username: username,\n        password: password\n      });\n      let user = response.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  },\n  async register(username, password, firstname, country, city, state, about, adress, lastname) {\n    let response = await Service.post(\"/users\", {\n      username,\n      password,\n      firstname,\n      country,\n      city,\n      state,\n      about,\n      adress,\n      lastname\n    });\n    let user = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    return true;\n  },\n  logout() {\n    localStorage.removeItem('user');\n  },\n  getUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  },\n  getToken() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return user.token;\n    }\n  },\n  authenticated() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return true;\n    }\n    return false;\n  },\n  state: {\n    get authenticated() {\n      return Auth.authenticated();\n    }\n  }\n};\nexport { Auth };","map":{"version":3,"names":["axios","$router","Service","create","baseURL","timeout","headers","Accept","interceptors","request","use","Auth","getToken","e","console","error","response","status","logout","Proizvodi","getAll","proizvodi","get","data","map","doc","imgURL","imageurl","id","_id","Proizvod","ProizvodModel","Cijena","Opis","NajboljaUporaba","login","username","password","post","user","localStorage","setItem","JSON","stringify","register","firstname","country","city","state","about","adress","lastname","removeItem","getUser","parse","getItem","token","authenticated"],"sources":["/Users/alen/Desktop/projekt/wa-frontend/service/index.js"],"sourcesContent":["import axios from \"axios\";\nimport $router from \"@/router\";\n\n//vezan uz konkretni backend\nlet Service = axios.create({\n   /* baseURL: \"http://localhost:3100/\", */\nbaseURL: \"https://backendmatej2.herokuapp.com/\",\n    timeout: 3000,\n    headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\n/* PRIJE SVAKOG */\n\nService.interceptors.request.use((request) => {\n    try {\n        request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\n    } catch (e) {\n        console.error(e);\n    }\n    return request;\n});\n\nService.interceptors.response.use((response) => response, (error) => {\n    if (error.response.status == 401 || error.response.status == 401) {\n        Auth.logout()\n        //$router.go()\n    }\n})\n\n\nlet Proizvodi = {\n    async getAll(proizvodi) {\n\n        let response = await Service.get(`/Proizvod?${proizvodi}`)\n        let data = response.data\n        data = data.map((doc) => {\n            return {\n                imgURL: doc.imageurl,\n                id: doc._id,\n                Proizvod: doc.Proizvod,\n                ProizvodModel: doc.ProizvodModel,\n                Cijena: doc.Cijena,\n                Opis: doc.Opis,\n                NajboljaUporaba: doc.NajboljaUporaba,\n\n            }\n        })\n        return data\n    },\n\n\n\n}\n\n\n/* KORISNICI */\n\n\nlet Auth = {\n\n    async login(username, password) {\n\n        try {\n            let response = await Service.post(\"/auth\", {\n                username: username,\n                password: password\n            });\n\n            let user = response.data\n\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            return true;\n        } catch (error) {\n            return false\n        }\n\n\n    },\n    async register(username,\n        password,\n        firstname,\n        country,\n        city,\n        state,\n        about,\n        adress,\n        lastname) {\n        let response = await Service.post(\"/users\", {\n            username,\n            password,\n            firstname,\n            country,\n            city,\n            state,\n            about,\n            adress,\n            lastname\n        })\n        let user = response.data\n\n        localStorage.setItem(\"user\", JSON.stringify(user));\n\n        return true;\n    },\n    logout() {\n        localStorage.removeItem('user');\n    },\n    getUser() {\n        return JSON.parse(localStorage.getItem('user'))\n    },\n    getToken() {\n        let user = Auth.getUser();\n        if (user && user.token) {\n\n            return user.token;\n        }\n    },\n    authenticated() {\n        let user = Auth.getUser()\n        if (user && user.token) {\n            return true\n        }\n        return false\n    },\n    state: {\n        get authenticated() {\n            return Auth.authenticated();\n        },\n    },\n}\n\n\n\n\nexport { Auth,  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}