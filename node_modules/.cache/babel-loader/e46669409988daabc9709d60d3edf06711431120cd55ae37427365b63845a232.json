{"ast":null,"code":"import axios from \"axios\";\nimport router from \"@/router\"; // Pretpostavka da je router komponenta učitana kao router\n\nlet Service = axios.create({\n  baseURL: \"http://localhost:3100/\",\n  timeout: 3000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nService.interceptors.request.use(request => {\n  try {\n    request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\n  } catch (e) {\n    console.error(e);\n  }\n  return request;\n});\nService.interceptors.response.use(response => response, error => {\n  if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n    Auth.logout();\n    router.go();\n  } else {\n    console.error(\"Nevažeći odgovor:\", error.message);\n  }\n  return Promise.reject(error);\n});\nlet Auth = {\n  async login(username, password) {\n    try {\n      let response = await Service.post(\"/auth\", {\n        username: username,\n        password: password\n      });\n      let user = response.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  },\n  async register(username, password) {\n    let response = await Service.post(\"/users\", {\n      username,\n      password\n    });\n    let user = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    return true;\n  },\n  logout() {\n    localStorage.removeItem('user');\n  },\n  getUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  },\n  getToken() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return user.token;\n    }\n  },\n  authenticated() {\n    let user = Auth.getUser();\n    return !!user && !!user.token;\n  }\n};\nexport { Auth };","map":{"version":3,"names":["axios","router","Service","create","baseURL","timeout","headers","Accept","interceptors","request","use","Auth","getToken","e","console","error","response","status","logout","go","message","Promise","reject","login","username","password","post","user","data","localStorage","setItem","JSON","stringify","register","removeItem","getUser","parse","getItem","token","authenticated"],"sources":["/Users/alen/Desktop/projekt/wa-frontend/service/index.js"],"sourcesContent":["import axios from \"axios\";\nimport router from \"@/router\"; // Pretpostavka da je router komponenta učitana kao router\n\nlet Service = axios.create({\n    baseURL: \"http://localhost:3100/\",\n    timeout: 3000,\n    headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nService.interceptors.request.use((request) => {\n    try {\n        request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\n    } catch (e) {\n        console.error(e);\n    }\n    return request;\n});\n\nService.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        Auth.logout();\n        router.go();\n      } else {\n        console.error(\"Nevažeći odgovor:\", error.message);\n      }\n      return Promise.reject(error);\n    }\n  );\n  \nlet Auth = {\n    async login(username, password) {\n        try {\n            let response = await Service.post(\"/auth\", {\n                username: username,\n                password: password\n            });\n            let user = response.data\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            return true;\n        } catch (error) {\n            return false;\n        }\n    },\n    async register(username, password) {\n        let response = await Service.post(\"/users\", {\n            username,\n            password,\n        });\n        let user = response.data;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        return true;\n    },\n    logout() {\n        localStorage.removeItem('user');\n    },\n    getUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    },\n    getToken() {\n        let user = Auth.getUser();\n        if (user && user.token) {\n            return user.token;\n        }\n    },\n    authenticated() {\n        let user = Auth.getUser();\n        return !!user && !!user.token;\n    },\n};\n\nexport { Auth };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}