{"ast":null,"code":"import axios from \"axios\";\nlet Service = axios.create({\n  baseURL: \"http://localhost:3000\",\n  timeout: 1000\n});\nService.interceptors.request.use(request => {\n  try {\n    request.headers[\"Authorization\"] = \"Bearer \" + Auth.getToken();\n  } catch (e) {\n    console.error(e);\n  }\n  return request;\n});\nService.interceptors.response.use(response => response, error => {\n  if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n    Auth.logout();\n  }\n  return Promise.reject(error);\n});\nlet Auth = {\n  async register(name, username, password) {\n    await Service.post(\"/register\", {\n      name: name,\n      username: username,\n      password: password\n    });\n    return true;\n  },\n  async loginPage(username, password) {\n    let response = await Service.post(\"/login\", {\n      username: username,\n      password: password\n    });\n    let user = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    return true;\n  },\n  logout() {\n    localStorage.removeItem(\"user\");\n  },\n  getUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  },\n  getName() {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    return user.name;\n  },\n  getToken() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return user.token;\n    } else return false;\n  },\n  authenticated() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return true;\n    }\n    return false;\n  },\n  state: {\n    get authenticated() {\n      return Auth.authenticated();\n    },\n    get userUsername() {\n      let user = Auth.getUser();\n      if (user) {\n        return user.username;\n      }\n      return false;\n    },\n    get userName() {\n      let user = Auth.getUser();\n      if (user) {\n        return user.name;\n      }\n      return false;\n    }\n  }\n};\nexport { Service, Auth }; // exportamo Service za ručne pozive ili Posts za","map":{"version":3,"names":["axios","Service","create","baseURL","timeout","interceptors","request","use","headers","Auth","getToken","e","console","error","response","status","logout","Promise","reject","register","name","username","password","post","loginPage","user","data","localStorage","setItem","JSON","stringify","removeItem","getUser","parse","getItem","getName","token","authenticated","state","userUsername","userName"],"sources":["/Users/alen/Desktop/projekt/wa-frontend/src/views/index.js"],"sourcesContent":["import axios from \"axios\";\n\nlet Service = axios.create({\n  baseURL: \"http://localhost:3000\",\n  timeout: 1000,\n});\n\nService.interceptors.request.use((request) => {\n  try {\n    request.headers[\"Authorization\"] = \"Bearer \" + Auth.getToken();\n  } catch (e) {\n    console.error(e);\n  }\n  return request;\n});\n\nService.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (\n      error.response &&\n      (error.response.status === 401 || error.response.status === 403)\n    ) {\n      Auth.logout();\n    }\n    return Promise.reject(error);\n  }\n);\n\nlet Auth = {\n  async register(name, username, password) {\n    await Service.post(\"/register\", {\n      name: name,\n      username: username,\n      password: password,\n\n    });\n\n    return true;\n  },\n\n  async loginPage(username, password) {\n    let response = await Service.post(\"/login\", {\n      username: username,\n      password: password,\n    });\n    let user = response.data;\n\n    localStorage.setItem(\"user\", JSON.stringify(user));\n\n    return true;\n  },\n  logout() {\n    localStorage.removeItem(\"user\");\n  },\n\n  getUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  },\n\n  getName() {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    return user.name;\n  },\n\n  getToken() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return user.token;\n    } else return false;\n  },\n\n  authenticated() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return true;\n    }\n    return false;\n  },\n\n  state: {\n    get authenticated() {\n      return Auth.authenticated();\n    },\n    get userUsername() {\n      let user = Auth.getUser();\n\n      if (user) {\n        return user.username;\n      }\n      return false;\n    },\n    get userName() {\n      let user = Auth.getUser();\n\n      if (user) {\n        return user.name;\n      }\n      return false;\n    },\n  },\n};\nexport { Service, Auth }; // exportamo Service za ručne pozive ili Posts za\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}